{"version":3,"sources":["components/Nav.tsx","components/ProductsTable.tsx","contex/ProductsReducer.tsx","contex/ProductsContex.tsx","components/Products.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Nav","className","ProductsTable","products","map","product","key","id","src","previewURL","alt","onClick","window","open","largeImageURL","user","views","downloads","likes","comments","state","action","type","payload","initialState","ProductsContex","createContext","ProductsContexProvider","props","useReducer","ProductsReducer","dispatch","fetchNewData","search","a","Axios","get","then","res","data","hits","Provider","value","sortData","sortParam","order","sortedProducts","sort","producta","productb","children","Products","useContext","useState","setSeatch","setSort","handleSort","history","location","pathname","substring","useEffect","length","onSubmit","e","preventDefault","htmlFor","onChange","target","to","style","fontSize","match","params","App","path","component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5045ec6e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Nav() {\r\n  return (\r\n    <nav className=\"sticky-custom\">\r\n      <h1 className=\"text-3xl p-2 bg-gray-400 text-center border-b-2 border-black \">Products</h1>\r\n    </nav>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { IProduct, IProducts } from '../contex/Intefraces';\r\n\r\nexport default function ProductsTable({ products }:IProducts | any) {\r\n  return (\r\n    <ul className=\"flex flex-col gap-4 p-4\">\r\n      \r\n      {products.map((product: IProduct)=>{\r\n        return (\r\n          <li key={product.id} className=\"grid23\">\r\n            <div className=\"items-center text-center m-auto\">\r\n              <img className=\"cursor-pointer img-min-250\" src={product.previewURL} alt={product.previewURL} onClick={()=>window.open(product.largeImageURL)} />\r\n              <h2> {product.user}</h2>\r\n            </div>\r\n            <ul className=\"grid1111 text-center text-2xl items-center\">\r\n              <li>{product.views} </li>\r\n              <li>{product.downloads} </li>\r\n              <li>{product.likes} </li>\r\n              <li>{product.comments} </li>\r\n            </ul>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n","import { IProducts } from './Intefraces';\r\n\r\nexport default (state:IProducts, action: any) => {\r\n  switch (action.type) {\r\n    case 'FETCH_NEW_DATA':\r\n      return { ...state, products: action.payload };\r\n    case 'SORT_DATA':\r\n      return { ...state, products: action.payload };  \r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import Axios from 'axios';\r\nimport React, { createContext, useReducer } from 'react';\r\nimport ProductsReducer from './ProductsReducer';\r\n\r\nconst initialState = {\r\n  products: []\r\n};\r\n\r\nexport const ProductsContex = createContext<any>(initialState);\r\n\r\nexport function ProductsContexProvider(props: any) {\r\n  const [state, dispatch] = useReducer(ProductsReducer, initialState);\r\n\r\n  const fetchNewData = async (search: string) => {\r\n    Axios.get(`https://pixabay.com/api/?key=18158143-8480e2394387828033c362179&q=${search}&image_type=photo`)\r\n      .then(res=>{\r\n        dispatch({\r\n          type:'FETCH_NEW_DATA',\r\n          payload: res.data.hits\r\n        });\r\n      });\r\n  };\r\n\r\n  const sortData = (sortParam: string, order: string) => {\r\n    switch (order){\r\n      case 'descending':{\r\n        const sortedProducts = state.products;\r\n        sortedProducts.sort((producta: any, productb: any) => {\r\n          return (producta[sortParam]) - (productb[sortParam]);\r\n        });\r\n        dispatch({\r\n          type: 'SORT_DATA',\r\n          payload: sortedProducts\r\n        });\r\n        break;\r\n      }\r\n      case 'ascending':{\r\n        const sortedProducts = state.products;\r\n        sortedProducts.sort((producta: any, productb: any) => {\r\n          return (productb[sortParam]) - (producta[sortParam]);\r\n        });\r\n        dispatch({\r\n          type: 'SORT_DATA',\r\n          payload: sortedProducts\r\n        });\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }         \r\n  };\r\n\r\n  return (\r\n    <ProductsContex.Provider value={{ products:state.products, fetchNewData, sortData }}>\r\n      {props.children}\r\n    </ProductsContex.Provider>\r\n  );\r\n}\r\n\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\nimport ProductsTable from './ProductsTable';\r\nimport { ProductsContex } from '../contex/ProductsContex';\r\n\r\nconst Products = (props:any) => {\r\n  const { products, fetchNewData, sortData } = useContext(ProductsContex);\r\n  const [search, setSeatch] = useState('');\r\n  const [sort, setSort] = useState('');\r\n\r\n  const handleSumbit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    fetchNewData(search);\r\n    setSeatch('');\r\n  };\r\n  const handleChange = (e:  React.ChangeEvent<HTMLInputElement>) =>{\r\n    setSeatch(e.target.value);\r\n  };\r\n\r\n  const handleSort = async () =>{\r\n    await props.history;\r\n    if (sort===props.history.location.pathname.substring(1)){\r\n      setSort('');\r\n      sortData(props.history.location.pathname.substring(1), 'descending');\r\n    } else {\r\n      setSort(props.history.location.pathname.substring(1));\r\n      sortData(props.history.location.pathname.substring(1), 'ascending');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    products.length === 0 && fetchNewData('all');\r\n  });\r\n\r\n\r\n  return (\r\n    <section className=\"flex-grow w-full \">\r\n      <div className=\"border-b-2 border-black p-2 grid23 sticky-custom bg-white\">\r\n        <form className=\" text-2xl flex flex-row text-center flex-wrap justify-center w-full\" onSubmit={handleSumbit}>\r\n          <label htmlFor=\"products_input\">\r\n            Enter product type:\r\n            <input id=\"products_input\" type=\"text\" className=\"border-2 border-gray-500 rounded-md mx-2\" value={search} onChange={handleChange} />\r\n          </label>\r\n        </form>\r\n        <ul className=\"grid1111 text-center text-2xl items-center\">\r\n          <li>\r\n            <NavLink className=\"lg:flex lg:justify-center lg:items-center\" to=\"/views\" onClick={handleSort}>views\r\n              {\r\n                 props.history.location.pathname.substring(1)==='views' ?\r\n                   ( sort==='' ? <ArrowDropDownIcon style={{ fontSize: 40 }} /> : <ArrowDropUpIcon style={{ fontSize: 40 }} /> ) : <div />\r\n              }\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink className=\"lg:flex lg:justify-center lg:items-center\" to=\"/downloads\" onClick={handleSort}>downloads\r\n              {\r\n                 props.history.location.pathname.substring(1)==='downloads' ?\r\n                   ( sort==='' ? <ArrowDropDownIcon style={{ fontSize: 40 }} /> : <ArrowDropUpIcon style={{ fontSize: 40 }} /> ) : <div />\r\n              }\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink className=\"lg:flex lg:justify-center lg:items-center\" to=\"/likes\" onClick={handleSort}>likes\r\n              {\r\n                 props.history.location.pathname.substring(1)==='likes' ?\r\n                   ( sort==='' ? <ArrowDropDownIcon style={{ fontSize: 40 }} /> : <ArrowDropUpIcon style={{ fontSize: 40 }} /> ) : <div />\r\n              }\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink className=\"lg:flex lg:justify-center lg:items-center\" to=\"/comments\" onClick={handleSort}>comments\r\n              {\r\n                 props.history.location.pathname.substring(1)==='comments' ?\r\n                   ( sort==='' ? <ArrowDropDownIcon style={{ fontSize: 40 }}  /> : <ArrowDropUpIcon style={{ fontSize: 40 }} /> ) : <div />\r\n              }\r\n            </NavLink>           \r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <ProductsTable products={products} sort={props.match.params.id} />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Products;","import React from 'react';\nimport './App.css';\nimport './assets/main.css';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport Nav from './components/Nav';\nimport Products from './components/Products';\nimport { ProductsContexProvider } from './contex/ProductsContex';\n\nfunction App(): JSX.Element {\n  return (\n    <HashRouter>\n      <Nav />\n      <Switch>\n        <ProductsContexProvider>\n          <Route path=\"/\" component={Products} />\n        </ProductsContexProvider>\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport React from 'react';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}